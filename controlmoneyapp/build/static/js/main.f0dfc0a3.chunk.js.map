{"version":3,"sources":["reducer.js","constants.js","utilities.js","components/Topbar.js","actions.js","components/AddExpenses.js","components/ExpensesList.js","components/App.js","components/purchasesForExpensePart/AddPurchases.js","components/purchasesForExpensePart/PurchasesList.js","components/purchasesForExpensePart/index.js","Main.js","index.js"],"names":["thisExpense","idCounter","controlMoneyApp","state","action","type","generalSum","value","currentSum","isCurrentSumPositive","expenses","id","name","isExpensePositive","purchases","map","expense","expenseId","isPositiveNumber","num","newNum","Number","isNaN","TopbarContainer","connect","dispatch","sumInput","className","ref","input","onClick","undefined","AddExpensesContainer","expenseName","expenseValue","trim","ExpensesListContainer","expensesList","length","idx","key","exact","to","App","AddPurchasesContainer","expenseItem","purchaseName","purchaseValue","PurchasesList","purchase","PurchasesContainer","ownProps","find","item","match","params","Main","store","path","component","Purchases","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0dfc0a3.chunk.js","sourcesContent":["import {\n  ADD_EXPENSES,\n  ADD_PURCHASE,\n  ADD_GENERAL_SUM,\n} from './constants';\n\nlet idCounter = 0;\nlet thisExpense;\n\nconst controlMoneyApp = (state = {}, action) => {\n  switch (action.type) {\n    case ADD_GENERAL_SUM:\n      return {\n        generalSum: action.value,\n        currentSum: action.value,\n        isCurrentSumPositive: true,\n        expenses: [],\n      };\n    case ADD_EXPENSES:\n      if (state.currentSum - action.value < 0) {\n        return { ...state, isCurrentSumPositive: false };\n      }\n\n      return {\n        ...state,\n        isCurrentSumPositive: true,\n        currentSum: state.currentSum - action.value,\n        expenses: [\n          ...state.expenses,\n          {\n            id: ++idCounter,\n            value: action.value,\n            name: action.name,\n            isExpensePositive: true,\n            purchases: [],\n          },\n        ],\n      };\n    case ADD_PURCHASE:\n      return {\n        ...state,\n        expenses: state.expenses.map((expense) => {\n          if (action.expenseId === expense.id) {\n            if (expense.value - action.value < 0) {\n              thisExpense = { ...expense, isExpensePositive: false };\n              return thisExpense;\n            }\n\n            thisExpense = {\n              ...expense,\n              value: expense.value - action.value,\n              isExpensePositive: true,\n              purchases: [\n                ...expense.purchases,\n                {\n                  value: action.value,\n                  name: action.name,\n                },\n              ],\n            };\n\n            return thisExpense;\n          }\n          return expense;\n        }),\n        generalSum: thisExpense.isExpensePositive\n          ? (state.generalSum - action.value) : state.generalSum,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default controlMoneyApp;\n","// ACTION TYPES\n\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const ADD_PURCHASE = 'ADD_PURCHASE';\nexport const ADD_GENERAL_SUM = 'ADD_GENERAL_SUM';\n","export function isPositiveNumber(num) {\n  const newNum = Number(num);\n  if (typeof newNum === 'number' && !isNaN(newNum)) {\n    return newNum >= 0;\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addGeneralSum } from '../actions';\nimport { isPositiveNumber } from '../utilities';\n\nexport const Topbar = ({ generalSum, currentSum, dispatch }) => {\n  let sumInput = '';\n\n  const getGeneralSum = () => {\n    dispatch(addGeneralSum(Number(sumInput.value)));\n  };\n\n  if (isPositiveNumber(generalSum)) {\n    return (\n      <div className=\"topbar\">\n        <h2 className=\"topbar__title\">Добро пожаловать в Control Money App.</h2>\n        <div className=\"topbar__counters\">\n          <p className=\"topbar__counter\">\n            Ваша общая сумма в наличии\n            <p>(в рублях):</p>\n            <span className=\"num-count\">{generalSum}</span>\n          </p>\n          <p className=\"topbar__counter\">\n            Ваша сумма в остатке после вычета категорий\n            <p>(в рублях):</p>\n            <span className=\"num-count\">{currentSum}</span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"topbar\">\n      <h2 className=\"topbar__title\">Добро пожаловать в Control Money App.</h2>\n      <label>\n        Введите сумму, которой вы распологаете.\n        <br />\n        <input ref={(input) => { sumInput = input; }} type=\"text\" />\n        <br />\n      </label>\n      <button type=\"button\" onClick={getGeneralSum}>Начать учет</button>\n      <h3 className=\"topbar__mistake-text\">\n        {(generalSum === undefined || isPositiveNumber(generalSum))\n          ? '' : 'Пожалуйста, введите корректное число.'}\n      </h3>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  generalSum: state.generalSum,\n  currentSum: state.currentSum,\n});\n\nconst TopbarContainer = connect(\n  mapStateToProps,\n)(Topbar);\n\nexport default TopbarContainer;\n","import { ADD_EXPENSES, ADD_PURCHASE, ADD_GENERAL_SUM } from './constants';\n\n// ACTION CREATORS\n\nexport function addExpenses(value, name) {\n  return { type: ADD_EXPENSES, value, name };\n}\n\nexport function addPurchase(expenseId, value, name) {\n  return {\n    type: ADD_PURCHASE, expenseId, value, name,\n  };\n}\n\nexport function addGeneralSum(value) {\n  return { type: ADD_GENERAL_SUM, value };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addExpenses } from '../actions';\nimport { isPositiveNumber } from '../utilities';\n\nconst AddExpenses = ({\n  generalSum,\n  isCurrentSumPositive,\n  dispatch,\n}) => {\n  let expenseName = '';\n  let expenseValue = '';\n\n  const addExpenseToList = () => {\n    if (expenseName.value.trim() === '' || expenseValue.value.trim() === ''\n        || !isPositiveNumber(expenseValue.value)) { return; }\n\n    dispatch(addExpenses(Number(expenseValue.value), expenseName.value));\n\n    expenseName.value = '';\n    expenseValue.value = '';\n  };\n\n  if (isPositiveNumber(generalSum)) {\n    return (\n      <div className=\"addExpense\">\n        <p className=\"addExpense__info\">\n          Введите вид товара, на который вы собираетесь тратить деньги и сколько\n          вы планируете на него потратить.\n        </p>\n        <label>\n          Вид товара:\n          <br />\n          <input ref={(input) => { expenseName = input; }} type=\"text\" />\n          <br />\n        </label>\n        <label>\n          Планируемые расходы:\n          <br />\n          <input ref={(input) => { expenseValue = input; }} type=\"text\" />\n          <br />\n        </label>\n        <button type=\"button\" onClick={addExpenseToList}>Добавить расходы</button>\n        <p>\n          {isCurrentSumPositive ? ''\n            : 'Не хватает средств, чтобы добавить категорию'}\n        </p>\n      </div>\n    );\n  }\n\n  return '';\n};\n\nconst mapStateToProps = (state) => ({\n  generalSum: state.generalSum,\n  isCurrentSumPositive: state.isCurrentSumPositive,\n});\n\nconst AddExpensesContainer = connect(\n  mapStateToProps,\n)(AddExpenses);\n\nexport default AddExpensesContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nexport const ExpensesList = ({ expensesList }) => {\n  if (expensesList !== undefined && expensesList.length !== 0) {\n    return (\n      <ul className=\"expensesList\">\n        {expensesList.map((expense, idx) => (\n          <li key={idx}>\n            <NavLink\n              exact\n              to={`/${expense.id}`}\n            >\n              На категорию &quot;\n              {expense.name}\n              &quot; осталось\n              {' '}\n              {expense.value}\n              {' '}\n              рублей.\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return '';\n};\n\nconst mapStateToProps = (state) => ({\n  expensesList: state.expenses,\n});\n\nconst ExpensesListContainer = connect(\n  mapStateToProps,\n)(ExpensesList);\n\nexport default ExpensesListContainer;\n","import React from 'react';\n\nimport Topbar from './Topbar';\nimport AddExpenses from './AddExpenses';\nimport ExpensesList from './ExpensesList';\n\nfunction App() {\n  return (\n    <div className=\"App wrapper\">\n      <Topbar />\n      <AddExpenses />\n      <ExpensesList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addPurchase } from '../../actions';\nimport { isPositiveNumber } from '../../utilities';\n\nconst AddPurchases = ({ expenseItem, dispatch }) => {\n  let purchaseName = '';\n  let purchaseValue = '';\n\n  const addPurchaseToList = () => {\n    if (purchaseName.value.trim() === '' || purchaseValue.value.trim() === ''\n         || !isPositiveNumber(purchaseValue.value)) { return; }\n\n    dispatch(addPurchase(\n      expenseItem.id,\n      Number(purchaseValue.value),\n      purchaseName.value,\n    ));\n\n    purchaseName.value = '';\n    purchaseValue.value = '';\n  };\n\n  return (\n    <div className=\"addPurchase\">\n      <h3>\n        Введите ваши покупки в категории &quot;\n        {expenseItem.name}\n        &quot;.\n      </h3>\n      <label>\n        Покупка:\n        <br />\n        <input ref={(input) => { purchaseName = input; }} type=\"text\" />\n        <br />\n      </label>\n      <label>\n        Сколько потратили:\n        <br />\n        <input ref={(input) => { purchaseValue = input; }} type=\"text\" />\n        <br />\n      </label>\n      <button type=\"button\" onClick={addPurchaseToList}>Добавить покупку</button>\n      <p>\n        { expenseItem.isExpensePositive ? ''\n          : 'Не хватает средств, чтобы добавить покупку'}\n      </p>\n    </div>\n  );\n};\n\nconst AddPurchasesContainer = connect()(AddPurchases);\n\nexport default AddPurchasesContainer;\n","import React from 'react';\n\nconst PurchasesList = ({ expenseItem }) => (\n  <div className=\"purchasesList\">\n    <p className=\"purchasesList__info\">\n      На категорию &quot;\n      {expenseItem.name}\n      &quot; осталось\n      {' '}\n      {expenseItem.value}\n      {' '}\n      рублей.\n    </p>\n    <table className=\"purchasesList__table\">\n      <tr>\n        <th>Название продукта</th>\n        <th>Цена</th>\n      </tr>\n      {expenseItem.purchases.map((purchase) => (\n        <tr>\n          <td>{purchase.name}</td>\n          <td>{purchase.value}</td>\n        </tr>\n      ))}\n    </table>\n  </div>\n);\n\nexport default PurchasesList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport AddPurchases from './AddPurchases';\nimport PurchasesList from './PurchasesList';\n\nconst Purchases = ({ expenseItem }) => {\n  if (expenseItem === null) {\n    return (\n      <div className=\"purchases wrapper\">\n        Это оповещательное сообщение. Хранилище с данными о покупках не имеет\n        информации, чтобы ее показать. Скорее всего, вы обновили страницу или\n        перешли на поддомен, введя его в поисковой строке.\n        Так как данное приложение не работает с базой данных, для проверки\n        логики приложения пожалуйста пользуйтесь кнопками &quot;вернуться на\n        предыдущую страницу&quot; в браузере.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"purchases wrapper\">\n      <AddPurchases expenseItem={expenseItem} />\n      <PurchasesList expenseItem={expenseItem} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  if (state.expenses === undefined) {\n    return {\n      expenseItem: null,\n    };\n  }\n  return {\n    expenseItem: state.expenses.find((item) => item.id === Number(ownProps.match.params.expenseId)),\n  };\n};\n\nconst PurchasesContainer = connect(\n  mapStateToProps,\n)(Purchases);\n\nexport default PurchasesContainer;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport App from './components/App';\nimport Purchases from './components/purchasesForExpensePart/index';\n\nconst Main = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/:expenseId\" component={Purchases} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n);\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\n\nimport reducer from './reducer';\nimport Main from './Main';\nimport './styles/main.sass';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Main store={store} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}