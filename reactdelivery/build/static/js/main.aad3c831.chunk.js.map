{"version":3,"sources":["config/theme.js","components/topbar/TopBar.js","components/Map/Map.js","components/button/Button.js","components/button/mainButton/MainButton.js","components/bottomComponents/locationArrow/LocationArrow.js","components/bottomComponents/slider/sliderButton/SliderButton.js","components/bottomComponents/slider/Slider.js","components/searchContainer/searchBar/request.js","components/searchContainer/searchBar/SearchBar.js","components/searchContainer/SearchContainer.js","components/App.js","index.js"],"names":["primaryColor","secondaryColor","nonActiveColor","activeColor","TopbarWrapper","styled","div","props","theme","FontAwesomeIconWrapper","FontAwesomeIcon","Title","h2","TopBar","icon","faChevronLeft","className","faBars","MapInner","ReactMapboxGl","accessToken","Map","mapContainer","React","createRef","coords","useEffect","style","ref","center","lng","lat","zoom","containerStyle","position","bottom","top","left","width","height","address_value","coordinates","anchor","textAlign","zIndex","fontWeight","fontSize","lineHeight","textTransform","color","display","background","borderRadius","margin","Button","button","MainButtonWrapper","MainButton","LocationArrowWrapper","span","LocationArrow","faLocationArrow","SliderButton","isTextGray","SliderWrapper","Slider","state","savedAddresses","street","setCoordsAddress","slide","bind","addAddress","prevProps","coordsAddress","this","firstStreet","second","setState","setVisibility","streetName","event","sliderNode","sliderRef","allSliderButtonNodes","children","length","initX","sliderButtonNode","sliderButtonRef","marginLeft","pageX","parseInt","sliderNodeWidth","Array","prototype","slice","call","forEach","btn","getComputedStyle","displayWidth","allowedWidthRight","moveAt","document","addEventListener","onMove","body","onmouseup","removeEventListener","ontouchend","e","onTouchStart","onMouseDown","onClick","searchContainerUp","undefined","updateCoords","Component","getStreetList","callback","queryValue","countVal","requestToStreets","Request","method","headers","Headers","Accept","Authorization","JSON","stringify","query","count","locations","city","fetch","then","response","json","data","suggestions","SearchInputLabel","label","SearchInputWrapper","input","attrs","placeholder","StreetList","ul","SearchBar","searchInputRef","searchLabelRef","streetsList","isDownshiftFocus","onStreetChosen","changeQueryList","searchBtn","querySelector","searchMPntArr","searchMPntMarker","backgroundColor","chosenStreet","chosenStreetAddress","street_type_full","house","block","block_type","setCoords","geo_lon","geo_lat","searchMPnt","tempStyle","current","value","streets","itemToString","item","onChange","selectedItem","unrestricted_value","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","htmlFor","id","onInput","onFocus","onBlur","filter","map","index","key","borderBottomColor","charAt","toUpperCase","SearchWrapper","getContDown","keyframes","getContUp","CrossWrapper","SearchButton","isActive","MapPointer","SearchContainer","visibility","searchContainerDown","setSearchContVisibility","useState","coordsInner","setCoordsInner","faTimes","faMapMarkerAlt","AppContainer","App","searchContVisibility","setMapCoords","render"],"mappings":"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","file":"static/js/main.aad3c831.chunk.js","sourcesContent":["export const primaryColor = '#121212';\nexport const secondaryColor = '#fff';\nexport const nonActiveColor = '#C4C4C4';\nexport const activeColor = '#D95640';\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faBars } from '@fortawesome/free-solid-svg-icons';\n\nconst TopbarWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  box-sizing: border-box;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${(props) => props.theme.primaryColor};\n  background: ${(props) => props.theme.secondaryColor};\n`;\n\nconst FontAwesomeIconWrapper = styled(FontAwesomeIcon)`\n\n  &.isLeftArrow{\n    font-size: 13px;\n  }\n\n  &.isBars{\n    font-size: 15px;\n  }\n`;\n\nconst Title = styled.h2`\n  display: inline-block;\n  font-family: GTWalsheimPro;\n  font-size: 20px;\n  text-transform: uppercase;\n`;\n\nfunction TopBar() {\n  return (\n    <TopbarWrapper>\n      <FontAwesomeIconWrapper icon={faChevronLeft} className=\"isLeftArrow\" />\n      <Title>react delivery</Title>\n      <FontAwesomeIconWrapper icon={faBars} className=\"isBars\" />\n    </TopbarWrapper>\n  );\n}\n\nexport default TopBar;\n","import React, { useEffect } from 'react';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\n\nconst MapInner = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoiYmxpbmRtYW4yMCIsImEiOiJjazVqbW92aHowNG5qM2txazM4MHR1b3o0In0.OBRzj-3gGUTHipAJbpClPw',\n});\n\nfunction Map(props) {\n  const mapContainer = React.createRef();\n  const { coords } = props;\n\n  useEffect(() => {\n\n  });\n\n  return (\n    <div>\n      <MapInner\n        style=\"mapbox://styles/mapbox/streets-v8\"\n        ref={mapContainer}\n        center={[coords.lng, coords.lat]}\n        zoom={coords.zoom}\n        containerStyle={{\n          position: 'absolute',\n          bottom: 0,\n          top: '50px',\n          left: 0,\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        {coords.address_value ? (\n          <Marker\n            coordinates={[coords.lng, coords.lat]}\n            anchor=\"bottom\"\n            style={{\n              textAlign: 'center',\n              zIndex: 0,\n            }}\n          >\n            <span style={{\n              fontWeight: 500,\n              fontSize: '26px',\n              lineHeight: '30px',\n              textTransform: 'uppercase',\n              color: '#121212',\n            }}\n            >\n              {coords.address_value}\n            </span>\n            <span style={{\n              display: 'block',\n              width: '15px',\n              height: '15px',\n              background: '#D95640',\n              borderRadius: '50%',\n              margin: '0 auto',\n            }}\n            />\n            <span style={{\n              display: 'inline-block',\n              width: '5px',\n              height: '20px',\n              background: '#D95640',\n              borderRadius: '0 0 20px 20px',\n            }}\n            />\n          </Marker>\n        )\n          : <span />}\n      </MapInner>\n    </div>\n  );\n}\n\nexport default Map;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  width: 100%;\n  height: 50px;\n  color: ${(props) => props.theme.secondaryColor};\n  background: ${(props) => props.theme.primaryColor};\n  font-family: GTWalsheimPro;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 23px;\n  text-align: center;\n  border: 0;\n  border-radius: 45.5px;\n  cursor: pointer;\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../Button';\n\nconst MainButtonWrapper = styled.div`\n  position: absolute;\n  bottom: 30px;\n  right: 20px;\n  left: 20px;\n`;\n\nfunction MainButton() {\n  return (\n    <MainButtonWrapper>\n      <Button>Доставить сюда</Button>\n    </MainButtonWrapper>\n  );\n}\n\nexport default MainButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\n\nconst LocationArrowWrapper = styled.span`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  background: ${(props) => props.theme.secondaryColor};\n  font-size: 21px;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  position: absolute;\n  bottom: 195px;\n  right: 20px;\n`;\n\nfunction LocationArrow() {\n  return (\n    <LocationArrowWrapper>\n      <FontAwesomeIcon icon={faLocationArrow} />\n    </LocationArrowWrapper>\n  );\n}\n\nexport default LocationArrow;\n","import styled from 'styled-components';\n\nimport Button from '../../../button/Button';\n\nconst SliderButton = styled(Button)`\n  width: auto;\n  padding: 13px 15px 16px;\n  font-size: 18px;\n  line-height: 21px;\n  margin-right: 15px;\n\n  &:first-child{\n    margin-left: 20px;\n  }\n\n  &:last-child{\n    margin-right: 0;\n  }\n\n  background: ${(props) => props.theme.secondaryColor};\n\n  ${(props) => {\n    if (props.isTextGray) {\n      return 'color:#808080';\n    }\n    return `color:${props.theme.primaryColor}`;\n  }}\n`;\n\nexport default SliderButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nimport SliderButton from './sliderButton/SliderButton';\n\nconst SliderWrapper = styled.div`\n  width: auto;\n  height: 50px;\n  overflow: hidden;\n  white-space: nowrap;\n  position: absolute;\n  bottom: 105px;\n  left: 0px;\n  right: 0;\n`;\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      savedAddresses: [\n        {\n          street: 'Невский пр., 28',\n          lng: 30.3260765,\n          lat: 59.9355354,\n        }\n      ]\n    };\n\n    this.setCoordsAddress = this.props.setCoordsAddress;\n\n    this.slide = this.slide.bind(this);\n    this.addAddress = this.addAddress.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { coordsAddress } = this.props;\n\n    if (coordsAddress.address_value !== prevProps.coordsAddress.address_value) {\n      this.addAddress(coordsAddress, prevProps.coordsAddress);\n    }\n  }\n\n  addAddress(firstStreet, second) {\n    this.setState({\n      savedAddresses: [\n        {\n          street: firstStreet.address_value,\n          lng: firstStreet.lng,\n          lat: firstStreet.lat,\n        },\n        {\n          street: second.address_value,\n          lng: second.lng,\n          lat: second.lat,\n        },\n      ],\n    });\n  }\n\n  searchContainerUp() {\n    const { setVisibility } = this.props;\n    setVisibility('up');\n  }\n\n  updateCoords(streetName) {\n    this.setCoordsAddress({\n      ...streetName,\n      address_value: streetName.street,\n      zoom: [17.5],\n    });\n  }\n\n  //  BEGIN SLIDE FUNCTION\n\n  slide(event) {\n    const sliderNode = this.sliderRef;\n    let allSliderButtonNodes = sliderNode.children;\n    if (allSliderButtonNodes.length < 3) {\n      return;\n    }\n\n    const sliderButtonNode = this.sliderButtonRef;\n    let initX;\n\n    if (sliderButtonNode.style.marginLeft === '') {\n      initX = event.pageX - 20;\n    } else {\n      initX = event.pageX - parseInt(sliderButtonNode.style.marginLeft, 10);\n    }\n\n    let sliderNodeWidth = 0;\n\n    allSliderButtonNodes = Array.prototype.slice.call(allSliderButtonNodes);\n    allSliderButtonNodes.forEach((btn) => {\n      sliderNodeWidth += parseInt(getComputedStyle(btn).width, 10) + 15;\n    });\n    sliderNodeWidth += 5;\n\n    const displayWidth = parseInt(getComputedStyle(sliderNode).width, 10);\n\n    const allowedWidthLeft = 20;\n    const allowedWidthRight = displayWidth - sliderNodeWidth;\n\n    function moveAt(pageX) {\n      sliderButtonNode.style.marginLeft = `${pageX - initX}px`;\n\n      if (parseInt(sliderButtonNode.style.marginLeft, 10) > allowedWidthLeft) sliderButtonNode.style.marginLeft = `${allowedWidthLeft}px`;\n\n      else if (parseInt(sliderButtonNode.style.marginLeft, 10) < allowedWidthRight) sliderButtonNode.style.marginLeft = `${allowedWidthRight}px`;\n    }\n\n    moveAt(event.pageX);\n\n    function onMove(e) {\n      moveAt(e.pageX);\n    }\n\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('touchmove', onMove);\n\n    document.body.onmouseup = function removeOnMoveEvent() {\n      document.removeEventListener('mousemove', onMove);\n      document.body.onmouseup = null;\n    };\n\n    document.body.ontouchend = function removeOnMoveEvent() {\n      document.removeEventListener('touchmove', onMove);\n      document.body.ontouchend = null;\n    };\n  }\n\n  //  END SLIDE FUNCTION\n\n  render() {\n    const { savedAddresses } = this.state;\n    return (\n      <SliderWrapper\n        ref={(div) => { this.sliderRef = div; }}\n        onTouchStart={this.slide}\n        onMouseDown={this.slide}\n      >\n        <SliderButton\n          isTextGray\n          ref={(div) => {\n            this.sliderButtonRef = div;\n          }}\n          onClick={() => this.searchContainerUp()}\n        >\n          Куда доставить?\n        </SliderButton>\n        {(savedAddresses[0] === undefined) ? savedAddresses[0] : (savedAddresses[0].street) && (\n          <SliderButton\n            onClick={() => this.updateCoords(savedAddresses[0])}\n          >\n            {savedAddresses[0].street}\n          </SliderButton>\n        )}\n        {(savedAddresses[1] === undefined) ? savedAddresses[1] : (savedAddresses[1].street) && (\n          <SliderButton\n            onClick={() => this.updateCoords(savedAddresses[1])}\n          >\n            {savedAddresses[1].street}\n          </SliderButton>\n        )}\n      </SliderWrapper>\n    );\n  }\n}\n\nexport default Slider;\n","export default function getStreetList(callback, queryValue = '', countVal = 50) {\n  const requestToStreets = new Request(\n    'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address',\n    {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Token 1e4cb9c1bbeff03271767fb32b42cfb6721e8927',\n      }),\n      body: JSON.stringify({\n        query: queryValue,\n        count: countVal,\n        locations: [{\n          city: 'Санкт-Петербург',\n        }],\n      }),\n    },\n  );\n\n  fetch(requestToStreets)\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data.suggestions);\n    });\n}\n","\nimport React from 'react';\nimport styled from 'styled-components';\nimport Downshift from 'downshift';\n\nimport getStreetList from './request';\n\nconst SearchInputLabel = styled.label`\n  display: none;\n  font-size: 13px;\n  line-height: 14px;\n  color: ${(props) => props.theme.nonActiveColor};\n  position: relative;\n  top: 31px;\n`;\n\nconst SearchInputWrapper = styled.input.attrs(() => ({\n  placeholder: 'Куда доставить?',\n}))`\n  width: 100%;\n  font-size: 17px;\n  line-height: 18px;\n  color: ${(props) => props.theme.primaryColor};\n  margin: 19px 0 35px;\n  padding: 4px 0;\n  border: 0;\n  border-bottom: 1px solid #eee;\n  outline: 0;\n\n  &::placeholder{\n    color: ${(props) => props.theme.nonActiveColor};\n  }\n  &:focus{\n    border-bottom-color: #EFB8AF;\n  }\n`;\n\nconst StreetList = styled.ul`\n  max-height: 215px;\n  height: auto;\n  overflow: hidden;\n  font-size: 17px;\n  line-height: 19px;\n  color: ${(props) => props.theme.primaryColor};\n  padding: 0;\n\n  & > li{\n    height: 71px;\n    box-sizing: border-box;\n    border-bottom: 1px solid #EEE;\n    list-style-type: none;\n    padding: 15px 0;\n  }\n\n  & span.street{\n    display: inline-block;\n  }\n\n  & span.region{\n    font-size: 13px;\n    line-height: 13px;\n    color: ${(props) => props.theme.nonActiveColor};\n  }\n`;\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.searchInputRef = React.createRef();\n    this.searchLabelRef = React.createRef();\n    this.state = {\n      streetsList: [],\n    };\n    this.isDownshiftFocus = this.isDownshiftFocus.bind(this);\n    this.onStreetChosen = this.onStreetChosen.bind(this);\n    this.changeQueryList = this.changeQueryList.bind(this);\n  }\n\n  onStreetChosen() {\n    const searchBtn = document.querySelector('.search__button');\n    const searchMPntArr = document.querySelector('.search__lctnIcn_arrow');\n    const searchMPntMarker = document.querySelector('.search__lctnIcn_marker');\n\n    searchBtn.style.backgroundColor = '#121212';\n    searchBtn.style.color = '#fff';\n    searchMPntArr.style.display = 'none';\n    searchMPntMarker.style.display = 'none';\n\n    const { streetsList } = this.state;\n    const chosenStreet = streetsList[0];\n\n    const chosenStreetAddress = `${chosenStreet.data.street_type_full} ${chosenStreet.data.street\n    }${chosenStreet.data.house && chosenStreet.data.street_type_full !== 'метро'\n      ? (`, ${chosenStreet.data.house\n      }${chosenStreet.data.block ? (chosenStreet.data.block_type + chosenStreet.data.block) : ''}`) : ''}`;\n\n    const { setCoords } = this.props;\n\n    setCoords({\n      address_value: chosenStreetAddress,\n      lng: chosenStreet.data.geo_lon,\n      lat: chosenStreet.data.geo_lat,\n    });\n  }\n\n  isDownshiftFocus() {\n    const searchBtn = document.querySelector('.search__button');\n    const searchMPnt = document.querySelector('.search__mapPointer');\n    const searchMPntArr = document.querySelector('.search__lctnIcn_arrow');\n    const searchMPntMarker = document.querySelector('.search__lctnIcn_marker');\n\n    const tempStyle = getComputedStyle(this.searchLabelRef.current).display === 'none' ? 'block'\n      : 'none';\n\n    this.searchLabelRef.current.style.display = tempStyle;\n\n    if (tempStyle === 'block') {\n      this.searchInputRef.current.placeholder = '';\n      searchBtn.style.display = 'none';\n      searchMPnt.style.display = 'inline-block';\n      searchMPntArr.style.display = 'none';\n      searchMPntMarker.style.display = 'inline-block';\n    } else {\n      this.searchInputRef.current.placeholder = 'Куда доставить?';\n      searchBtn.style.display = 'block';\n      searchMPnt.style.display = 'block';\n      searchMPntArr.style.display = 'inline-block';\n      searchMPntMarker.style.display = 'none';\n    }\n  }\n\n  changeQueryList(count, value) {\n    if (count === 1) {\n      getStreetList(\n        (streets) => {\n          this.setState({\n            streetsList: streets,\n          });\n          this.onStreetChosen();\n        },\n        value, count,\n      );\n    }\n    getStreetList(\n      (streets) => {\n        this.setState({\n          streetsList: streets,\n        });\n      },\n      this.searchInputRef.current.value,\n    );\n  }\n\n  render() {\n    const { streetsList } = this.state;\n    return (\n      <Downshift\n        itemToString={\n          (item) => (item ? `${item.data.street_type_full} ${item.data.street\n          }${item.data.house && item.data.street_type_full !== 'метро'\n            ? (`, ${item.data.house\n            }${item.data.block ? (item.data.block_type + item.data.block) : ''}`) : ''}` : '')\n        }\n        onChange={(selectedItem) => { this.changeQueryList(1, selectedItem.unrestricted_value); }}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          highlightedIndex,\n        }) => (\n          <div>\n            <SearchInputLabel htmlFor=\"searchInput\" ref={this.searchLabelRef}>\n            Куда доставить?\n            </SearchInputLabel>\n            <SearchInputWrapper\n              {...getInputProps()}\n              ref={this.searchInputRef}\n              id=\"searchInput\"\n              onInput={this.changeQueryList}\n              onFocus={this.isDownshiftFocus}\n              onBlur={this.isDownshiftFocus}\n            />\n            <StreetList {...getMenuProps()}>\n              {\n                isOpen\n                  ? streetsList\n                    .filter((item) => item.data.street !== null)\n                    .map((item, index) => (\n                      <li\n                        {...getItemProps({\n                          key: item.value,\n                          index,\n                          item,\n                          style: {\n                            borderBottomColor:\n                            highlightedIndex === index ? '#EFB8AF' : '#EEE',\n                          },\n                        })}\n                      >\n                        <span className=\"street\">\n                          {\n                            (item.data.street_type_full !== 'метро'\n                              ? (`${item.data.street_type_full} `) : '')\n            + (item.data.street ? item.data.street : '')\n            + (item.data.house ? (`, ${item.data.house}`) : '')\n            + (item.data.block ? (item.data.block_type + item.data.block) : '')\n                            }\n                        </span>\n                        <br />\n                        <span className=\"region\">\n                          {\n                            item.data.street_type_full === 'метро'\n                              ? `${item.data.street_type_full.charAt(0).toUpperCase()\n                              + item.data.street_type_full.slice(1)\n                              }, ${item.data.city}`\n                              : item.data.city\n                          }\n                        </span>\n                      </li>\n                    ))\n                  : null\n                 }\n            </StreetList>\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faLocationArrow, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Button from '../button/Button';\nimport SearchBar from './searchBar/SearchBar';\n\nlet SearchWrapper = styled.div`\n    display: block;\n    visibility: visible;\n    position: absolute;\n    left: 0;\n    top: 100%;\n    width: 100%;\n    max-height: 670px;\n    height: 80%;\n    background: ${(props) => props.theme.secondaryColor};\n    box-sizing: border-box;\n    padding: 20px;\n    border-radius: 20px 20px 0px 0px;\n`;\n\nconst getContDown = keyframes`\n  from {\n    top: 20%;\n  }\n  50%  { visibility: visible; }\n  to {\n    top: 100%;\n    visibility: hidden;\n  }\n`;\n\nconst getContUp = keyframes`\n  from {\n    top: 100%;\n    visibility: hidden;\n  }\n  50%  { visibility: visible; }\n  to {\n    top: 20%;\n  }\n`;\n\nconst CrossWrapper = styled(FontAwesomeIcon)`\n  font-size: 25px;\n  float: right;\n`;\n\nconst SearchButton = styled(Button)`\n  margin-bottom: 25px;\n\n  ${(props) => {\n    if (!props.isActive) {\n      return `\n        background: ${props.theme.nonActiveColor};\n        color: #EEEEEE;`;\n    }\n  }}\n`;\n\nconst MapPointer = styled.button`\n  font-family: \"GTWalsheimPro\", sans-serif;\n  font-weight: normal;\n  font-size: 17px;\n  line-height: 19px;\n  display: block;\n  width: auto;\n  margin: 17px auto;\n  border: 0;\n  color: ${(props) => props.theme.primaryColor};\n  background: ${(props) => props.theme.secondaryColor};\n\n  & > .search__lctnIcn{\n    margin-right: 10px;\n  }\n\n  & > .search__lctnIcn_marker{\n    display: none;\n  }\n`;\n\nfunction SearchContainer(props) {\n  const { visibility } = props;\n  if (visibility === 'up') {\n    SearchWrapper = styled(SearchWrapper)`\n      animation: ${getContUp} 0.5s linear forwards;\n    `;\n    props.setSearchContVisibility('none');\n  } else if (visibility === 'down') {\n    SearchWrapper = styled(SearchWrapper)`\n      animation: ${getContDown} 0.5s linear forwards;\n    `;\n    props.setSearchContVisibility('none');\n  }\n\n  function searchContainerDown() {\n    props.setSearchContVisibility('down');\n  }\n\n  const [coordsInner, setCoordsInner] = useState({\n    address_value: '',\n    lng: 30.3,\n    lat: 59.95,\n    zoom: [10.5],\n  });\n\n  function getCoordinates() {\n    props.setCoords({\n      address_value: coordsInner.address_value,\n      lng: coordsInner.lng,\n      lat: coordsInner.lat,\n      zoom: [17.5],\n    });\n  }\n\n\n  return (\n    <SearchWrapper>\n      <CrossWrapper\n        icon={faTimes}\n        onClick={() => { searchContainerDown(); }}\n      />\n      <SearchBar setCoords={setCoordsInner} />\n      <SearchButton\n        isActive={false}\n        className=\"search__button\"\n        onClick={() => {\n          getCoordinates();\n          searchContainerDown();\n        }}\n      >\n          Доставить сюда\n      </SearchButton>\n      <MapPointer\n        className=\"search__mapPointer\"\n        onClick={() => { searchContainerDown(); }}\n      >\n        <FontAwesomeIcon\n          className=\"search__lctnIcn search__lctnIcn_arrow\"\n          icon={faLocationArrow}\n        />\n        <FontAwesomeIcon\n          className=\"search__lctnIcn search__lctnIcn_marker\"\n          icon={faMapMarkerAlt}\n        />\n          Выбрать на карте\n      </MapPointer>\n    </SearchWrapper>\n  );\n}\n\nexport default SearchContainer;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport TopBar from './topbar/TopBar';\nimport Map from './Map/Map';\nimport MainButton from './button/mainButton/MainButton';\nimport LocationArrow from './bottomComponents/locationArrow/LocationArrow';\nimport Slider from './bottomComponents/slider/Slider';\nimport SearchContainer from './searchContainer/SearchContainer';\n\nconst AppContainer = styled.div`\n  position: relative;\n  max-width: 480px;\n  width: 100%;\n  max-height: 815px;\n  height: 100%;\n  overflow: hidden;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  const [coords, setCoords] = useState({\n    address_value: 'Невский пр., 28',\n    lng: 30.3260765,\n    lat: 59.9355354,\n    zoom: [10.5],\n  });\n\n  const [searchContVisibility, setSearchContVisibility] = useState('none');\n\n  return (\n    <AppContainer>\n      <TopBar />\n      <Map coords={coords} setMapCoords={setCoords} />\n      <LocationArrow />\n      <MainButton />\n      <Slider\n        setVisibility={setSearchContVisibility}\n        coordsAddress={coords}\n        setCoordsAddress={setCoords}\n      />\n      <SearchContainer\n        setCoords={setCoords}\n        visibility={searchContVisibility}\n        setSearchContVisibility={setSearchContVisibility}\n      />\n    </AppContainer>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'normalize.css';\nimport { ThemeProvider } from 'styled-components';\n\nimport * as theme from './config/theme';\nimport App from './components/App';\n\nrender(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.querySelector('.main'),\n);\n"],"sourceRoot":""}